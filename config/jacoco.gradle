apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.7.5.201505241946'
}

project.afterEvaluate {
    def buildTypes = android.buildTypes.collect { type -> type.name }
    def productFlavors = android.productFlavors.collect { flavor -> flavor.name }

    productFlavors.each { productFlavorName ->
        buildTypes.each { buildTypeName ->
            def sourceName = "${buildTypeName}"

            if (productFlavorName) {
                sourceName = "${productFlavorName}${sourceName.capitalize()}"
            }

            def targetName = "${sourceName.capitalize()}"
            def testTaskName = "test${sourceName.capitalize()}UnitTest"
            def coverageTaskName = "${testTaskName}Coverage"

            //noinspection GroovyAssignabilityCheck
            task "$coverageTaskName" (type:JacocoReport, dependsOn: "$testTaskName") {

                group = "Reporting"
                description = "Generate Jacoco coverage reports on the ${targetName} build."

                classDirectories = fileTree(
                        dir: "${project.buildDir}/intermediates/classes/${productFlavorName}/${buildTypeName}",
                        excludes: [
                                '**/R.class', '**/R$*.class',
                                '**/BuildConfig.*', '**/Manifest*.*',
                                '**/*$Lambda*.class',
                                '**/*$ViewInjector*.*'
                        ]
                )

                def coverageSourceDirs = [ "src/main/java" ]
                additionalSourceDirs = files(coverageSourceDirs)
                sourceDirectories = files(coverageSourceDirs)
                executionData = files("${project.buildDir}/jacoco/${testTaskName}.exec")

                reports {
                    xml.enabled = true
                    html.enabled = true
                }
            }
        }
    }
}
